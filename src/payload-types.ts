/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    products: Product;
    'custom-orders': CustomOrder;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    'custom-orders': CustomOrdersSelect<false> | CustomOrdersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  /**
   * Category name that will be displayed to users
   */
  name: string;
  /**
   * URL-friendly identifier for this category
   */
  slug: string;
  /**
   * Optional description for this category
   */
  description?: string | null;
  /**
   * Whether this category is active and visible to users
   */
  isActive?: boolean | null;
  /**
   * Sort order for displaying categories (lower numbers appear first)
   */
  sortOrder?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  /**
   * Product name
   */
  name: string;
  /**
   * URL-friendly identifier for this product
   */
  slug: string;
  /**
   * Detailed product description
   */
  description?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Brief product description for listings
   */
  shortDescription?: string | null;
  /**
   * Product category
   */
  category: number | Category;
  /**
   * Product price in RON
   */
  price: number;
  images?:
    | {
        image: number | Media;
        /**
         * Alternative text for accessibility
         */
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  specifications?: {
    /**
     * Print material used (e.g., PLA, PETG, ABS)
     */
    material?: string | null;
    /**
     * Product dimensions (L x W x H)
     */
    dimensions?: string | null;
    /**
     * Product weight
     */
    weight?: string | null;
    /**
     * Approximate print time
     */
    printTime?: string | null;
    /**
     * Infill percentage used
     */
    infill?: string | null;
  };
  /**
   * Can this product be customized?
   */
  customizable?: boolean | null;
  /**
   * Available customization options
   */
  customizationOptions?: string | null;
  /**
   * Is this product currently in stock?
   */
  inStock?: boolean | null;
  /**
   * Available quantity (leave empty for unlimited)
   */
  stockQuantity?: number | null;
  /**
   * Is this product active and visible to customers?
   */
  isActive?: boolean | null;
  /**
   * Feature this product on the homepage?
   */
  featured?: boolean | null;
  /**
   * Tags for better searchability
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom-orders".
 */
export interface CustomOrder {
  id: number;
  /**
   * Full name of the customer
   */
  customerName: string;
  /**
   * Customer email address
   */
  customerEmail: string;
  /**
   * Customer phone number
   */
  customerPhone?: string | null;
  /**
   * Internal project name (auto-generated if not provided)
   */
  projectName: string;
  /**
   * Detailed description of what needs to be printed
   */
  projectDescription: string;
  /**
   * Number of pieces to print
   */
  quantity: number;
  /**
   * Customer preferred delivery date
   */
  preferredDeadline?: string | null;
  /**
   * Additional requirements, color preferences, etc.
   */
  additionalNotes?: string | null;
  /**
   * Customer preferred printing material
   */
  preferredMaterial?: ('pla' | 'petg' | 'abs' | 'tpu' | 'other') | null;
  /**
   * Upload STL, OBJ, 3MF, or PLY files
   */
  cadFiles?:
    | {
        file: number | Media;
        /**
         * Optional description of this file
         */
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Estimated print volume in cmÂ³ (calculated from CAD files)
   */
  estimatedVolume?: number | null;
  /**
   * Estimated material weight in grams
   */
  estimatedWeight?: number | null;
  /**
   * Estimated print time (e.g., "5 hours")
   */
  estimatedPrintTime?: string | null;
  /**
   * Final quoted price in RON
   */
  quotedPrice?: number | null;
  /**
   * Internal notes about pricing calculations
   */
  quoteNotes?: string | null;
  /**
   * Current status of the custom order
   */
  status:
    | 'pending'
    | 'analyzing'
    | 'quoted'
    | 'approved'
    | 'printing'
    | 'quality_check'
    | 'ready'
    | 'completed'
    | 'cancelled';
  /**
   * Internal notes for production team
   */
  internalNotes?: string | null;
  /**
   * Log of communications with customer
   */
  communications?:
    | {
        date: string;
        type: 'email_sent' | 'email_received' | 'phone_call' | 'quote_sent' | 'payment_received' | 'other';
        notes: string;
        id?: string | null;
      }[]
    | null;
  deliveryAddress?: {
    /**
     * Street address
     */
    street?: string | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * Postal code
     */
    postalCode?: string | null;
    /**
     * Country
     */
    country?: string | null;
  };
  /**
   * Unique order number for tracking
   */
  orderNumber?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'custom-orders';
        value: number | CustomOrder;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  isActive?: T;
  sortOrder?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  shortDescription?: T;
  category?: T;
  price?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  specifications?:
    | T
    | {
        material?: T;
        dimensions?: T;
        weight?: T;
        printTime?: T;
        infill?: T;
      };
  customizable?: T;
  customizationOptions?: T;
  inStock?: T;
  stockQuantity?: T;
  isActive?: T;
  featured?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom-orders_select".
 */
export interface CustomOrdersSelect<T extends boolean = true> {
  customerName?: T;
  customerEmail?: T;
  customerPhone?: T;
  projectName?: T;
  projectDescription?: T;
  quantity?: T;
  preferredDeadline?: T;
  additionalNotes?: T;
  preferredMaterial?: T;
  cadFiles?:
    | T
    | {
        file?: T;
        description?: T;
        id?: T;
      };
  estimatedVolume?: T;
  estimatedWeight?: T;
  estimatedPrintTime?: T;
  quotedPrice?: T;
  quoteNotes?: T;
  status?: T;
  internalNotes?: T;
  communications?:
    | T
    | {
        date?: T;
        type?: T;
        notes?: T;
        id?: T;
      };
  deliveryAddress?:
    | T
    | {
        street?: T;
        city?: T;
        postalCode?: T;
        country?: T;
      };
  orderNumber?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}